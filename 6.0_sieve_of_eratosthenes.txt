
// An example in chaptor 6
// Generating a list of primes: The Sieve of Eratosthenes

boolean[] sieveOfEratosthenes(int max) {
	boolean[] flags = new boolean[max + 1];
	int count = 0;

	init(flags);	// Set all flags to true other than 0 and 1
	int prime = 2;

	while (prime <= Math.sqrt(max)) {
		/* Cross off remainning multiples of prime */
		crossOff(flags, prime);

		/* Find next value which is true */
		prime = getNextPrime(flags, prime);
	}

	return flags;
}

// 消掉当前prime的倍数
void crossOff(boolean[] flags, int prime) {
		/* Cross off remaining multiples of prime. We can start with (prime*prime),
		   because if we have a k * prime, where k < prime, this value would have 
		   already been crossed off in a prior iteration. */
		for (int i = prime * prime; i < flags.length; i += prime) {
			flags[i] = false;
		}
}

// 从没被消掉的数里找到下一个质数
int getNextPrime(boolean[] flags, int prime) {
	int next = prime + 1;
	while (next < flags.length && !flags[next]) {
		next++;
	}
	return next;
}